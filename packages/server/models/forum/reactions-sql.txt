select jsonb_object_agg(reaction_id, reaction_total_count) from (
	select key::integer as reaction_id , SUM(value::int2) as reaction_total_count  
	from reactions_on_messages, jsonb_each_text(reactions)  
	where message_id = 1
	GROUP BY key
) as s

select emoji_id, symbol, reactions_total_count  from (
		select key::integer as emoji_id , SUM(value::int2) as reactions_total_count  
		from reactions_on_messages, jsonb_each_text(reactions)  
		where message_id = 1
		GROUP BY key
) as counts
join emojis
on counts.emoji_id = emojis.id
	

update reactions_on_messages set
	reactions = case
		when reactions ? '1' and reactions ->> '1' = '1' then jsonb_set(reactions, '{1}', '0')
		else jsonb_set(reactions, '{1}', '1')
		end
where (message_id, user_id) = (1, 1);


// (async () => {
//   await connectDataBase();

//   Emoji.create({ symbol: '🦝', name: 'racoon' });
//   Emoji.create({ symbol: '🙂', name: 'smile' });
//   Emoji.create({ symbol: '👍', name: 'thumb up' });
//   Emoji.create({ symbol: '👎', name: 'thumb down' });
//   Emoji.create({ symbol: '❤', name: 'heart' });
//   Emoji.sync().then(() => console.log('EMOJIS TABLE SYNCED'));
// })();
