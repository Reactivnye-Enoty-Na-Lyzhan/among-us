name: Deploy to Cloud.Yandex

on:
  push:
    branches:
      - 'deploy'
  pull_request:
    branches:
      - 'deploy'
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Yandex Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          CLIENT_PORT: 3000
          SERVER_PORT: 3001
          POSTGRES_HOST: localhost
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
          POSTGRES_PORT: 5432
          PGADMIN_EMAIL: email@email.ru
          PGADMIN_PASSWORD: password
          PGADMIN_PORT: 80
          APP_HOST: ${{secrets.DC_APP_HOST}}
          VITE_SOCKET_HOST: ${{secrets.DC_SOCKET_HOST}}
          JWT_SECRET: secret
          AWS_ACCESS_KEY_ID: key
          AWS_SECRET_ACCESS_KEY: secretkey
          AWS_BUCKET: bucket
          OAUTH_CLIENT: test
          OAUTH_SECRET: asd
          CR_REGISTRY: crp37rtt3cl5rdvoiork
          CR_REPOSITORY: server
          IMAGE_TAG: ${{ github.sha }}

        run: |
          docker-compose build server
          docker-compose push

      - name: 'Generate docker-compose file for Yandex Cloud'
        uses: franzbischoff/replace_envs@v1
        env:
          SERVER_PORT: 3001
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5432
          POSTGRES_USER: ${{ secrets.DC_POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DC_POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DC_POSTGRES_DB }}
          OAUTH_CLIENT: ${{ secrets.DC_OAUTH_CLIENT }}
          OAUTH_SECRET: ${{ secrets.DC_OAUTH_SECRET }}
          JWT_SECRET: ${{ secrets.DC_JWT_SECRET }}
          AWS_BUCKET: amongus
          AWS_ACCESS_KEY_ID: ${{ secrets.DC_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DC_AWS_SECRET_ACCESS_KEY }}
          APP_HOST: ${{ secrets.DC_APP_HOST }}
          VITE_SOCKET_HOST: ${{ secrets.DC_SOCKET_HOST }}
          VITE_SOCKET_PORT: 3001
          NODE_ENV: production
          PGADMIN_DEFAULT_EMAIL: ${{ secrets.DC_PGADMIN_DEFAULT_EMAIL }}
          PGADMIN_DEFAULT_PASSWORD: ${{ secrets.DC_PGADMIN_DEFAULT_PASSWORD }}
          PGADMIN_LISTEN_PORT: 80
          CR_REGISTRY: crp37rtt3cl5rdvoiork
          CR_REPOSITORY: server
          IMAGE_TAG: ${{ github.sha }}
          NGINX_TAG: ${{ secrets.DC_NGINX_TAG }}

        with:
          from_file: 'docker-compose-deploy.yml'
          to_file: 'docker-compose-yc.yml'
      - name: Update VM
        uses: ./.github/actions/yandex-cli/
        with:
          key: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          args: compute instance update-container epddoun7tktto3e1d436 --docker-compose-file=./docker-compose-yc.yml
